pipeline {
    agent { label 'Jenkins-Agent' }

    tools {
        jdk "Java17"
        maven "Maven3"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
            
        stage('Checkout from SCM') {
            steps {
                // Get some code from a GitHub repository
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/Hatsuhinode/DevOps-01.git'
            }
        }
            
        stage('Build Application') {
            steps {
                // Navigate to the Application directory
                dir('./Application') {
                    // Run Maven commands
                    sh 'mvn clean package'
                }
            }
        }
            
        stage('Test Application') {
            steps {
                // Navigate to the Application directory
                dir('./Application') {
                    // Run Maven commands
                    sh 'mvn test'
                }
            }
        }

        stage("SonarQube Analysis") {
            steps {
                script {
                    // Define the path to your project directory
                    def projectDir = "./Application"
                    
                    // Use 'dir' block to change to the project directory for execution
                    dir(projectDir) {
                        // Inside the project directory, execute the SonarQube analysis
                        withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') { 
                            sh "mvn sonar:sonar"
                        }
                    }
                }
            }
        }
        
        stage("Quality Gate"){
            steps {
                script {
                    // Define the path to your project directory
                    def projectDir = "./Application"
                    
                    // Use 'dir' block to change to the project directory for execution
                    dir(projectDir) {
                        // Inside the project directory, wait for the SonarQube Quality Gate
                        waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-sonarqube-token'
                    }
                }
            }
        }
    }
    
    post {
        always {
            // Publish JUnit test results
            junit '**/target/surefire-reports/*.xml'
        }
    }
}


// NOTE
// Jenkinsfile defines steps and stages using relative paths or commands based on the workspace directory. 
// This means that any references to files or directories within the Jenkinsfile are relative to the workspace directory.

